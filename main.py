import os
from typing import final
from dotenv import load_dotenv
import telebot
from telebot import types
import logging
import sqlite3
import sys
import threading
import time
from database import DB_PATH, init_db, save_applicant
init_db()
logging.basicConfig(level=logging.INFO)
load_dotenv()
API_KEY = os.getenv('API_KEY')
bot = telebot.TeleBot(API_KEY)

user_state = {}
user_data = {}

@bot.message_handler(commands=['getdb'])
def send_db_file(message):
    try:
        with open(DB_PATH, 'rb') as f:
            bot.send_document(message.chat.id, f)
    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {str(e)}")

#start command
@bot.message_handler(commands=['start'])
def start(message):
  bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø —á–∞—Ç-–±–æ—Ç –ì–ê–£ –¢–û ¬´–¢–æ–±–æ–ª—å—Å–∫–∏–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏–∏¬ª.")
  markup = types.InlineKeyboardMarkup()
  #each button has a callback data that is used to identify the button when its pressed
  button1 = types.InlineKeyboardButton("–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∏ –∫–∞–∫–æ–≤–∞ –Ω–∞—à–∞ –º–∏—Å—Å–∏—è", callback_data="button1")
  button2 = types.InlineKeyboardButton("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –≤ –Ω–∞—à–µ–º —É—á—Ä–µ–∂–¥–µ–Ω–∏–∏", callback_data="button2")
  button3 = types.InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤", callback_data="button3")
  button4 = types.InlineKeyboardButton("–ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ", callback_data="button4")
  #Add buttons to markup in one colomn
  markup.add(button1)
  markup.add(button2)
  markup.add(button3)
  markup.add(button4)
  bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", reply_markup=markup)
def send_main_menu(chat_id):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton("–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –∏ –∫–∞–∫–æ–≤–∞ –Ω–∞—à–∞ –º–∏—Å—Å–∏—è", callback_data="button1")
    button2 = types.InlineKeyboardButton("–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã –≤ –Ω–∞—à–µ–º —É—á—Ä–µ–∂–¥–µ–Ω–∏–∏", callback_data="button2")
    button3 = types.InlineKeyboardButton("–ò—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤", callback_data="button3")
    button4 = types.InlineKeyboardButton("–ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ", callback_data="button4")
    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.add(button4)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
  if call.data == "button1":
    text = ("–≤ —Ü–µ–ª—è—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º  –†–æ—Å—Å–∏–π—Å–∫–æ–π  –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏–π  –≤ —Å—Ñ–µ—Ä–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏–∏.\n\n"
       "–ß–µ–º –º—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è:\n"
       "- —Ä–µ–∞–ª–∏–∑—É–µ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—é –∏ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –∑–∞—Ä–∞–∑–Ω—ã—Ö –∏ –∏–Ω—ã—Ö –±–æ–ª–µ–∑–Ω–µ–π –∂–∏–≤–æ—Ç–Ω—ã—Ö, –≤–∫–ª—é—á–∞—è —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã—Ö, –¥–æ–º–∞—à–Ω–∏—Ö, –∑–æ–æ–ø–∞—Ä–∫–æ–≤—ã—Ö –∏ –¥—Ä—É–≥–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö, –ø—É—à–Ω—ã—Ö –∑–≤–µ—Ä–µ–π, –ø—Ç–∏—Ü, —Ä—ã–± –∏ –ø—á–µ–ª, –≤ —Ç–æ–º —á–∏—Å–ª–µ:\n"
        "- –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—ç–ø–∏–∑–æ–æ—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –ª–∏–∫–≤–∏–¥–∞—Ü–∏—é –±–æ–ª–µ–∑–Ω–µ–π –∂–∏–≤–æ—Ç–Ω—ã—Ö;\n"
        "- –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö;\n"
        "- –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –≤ —Ç–æ–º —á–∏—Å–ª–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –±–æ–ª–µ–∑–Ω–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö;\n"
        "- –ª–µ—á–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö;\n"
        "- –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ-—Å–∞–Ω–∏—Ç–∞—Ä–Ω–æ–π —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã;\n"
        "- –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã—Ö —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.\n\n"
        "–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è:\n" 
          "‚Ä¢ –≥–æ—Ä–æ–¥ –¢–æ–±–æ–ª—å—Å–∫;\n"
          "‚Ä¢ –¢–æ–±–æ–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω;\n"
          "‚Ä¢ –£–≤–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω;\n"
          "‚Ä¢ –í–∞–≥–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω.")

    markup_restart = types.InlineKeyboardMarkup()
    restart_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", callback_data="send_main_menu")
    markup_restart.add(restart_button)

    bot.send_message(call.message.chat.id, text, reply_markup=markup_restart)

  elif call.data == "send_main_menu":
    send_main_menu(call.message.chat.id)

  elif call.data == "button2":
    with open("guarantees.jpg", "rb") as photo:
      markup_restart = types.InlineKeyboardMarkup()
      restart_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", callback_data="send_main_menu")
      markup_restart.add(restart_button)

      bot.send_photo(call.message.chat.id, photo, reply_markup=markup_restart)
        
  elif call.data == "button3":
    with open("thestory.jpg", "rb") as photo:
      bot.send_photo(call.message.chat.id, photo, caption="üìå –ò—Å—Ç–æ—Ä–∏—è —É—Å–ø–µ—Ö–∞: –æ—Ç –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–µ–ª—å–¥—à–µ—Ä–∞ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–≥–æ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è\n\n"

"üë®‚Äç‚öï–ê–±—Ä–∞–º–æ–≤ –ò–≤–∞–Ω –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á\n"
"–î–∏—Ä–µ–∫—Ç–æ—Ä –ì–ê–£ –¢–û ¬´–¢–æ–±–æ–ª—å—Å–∫–∏–π –≤–µ—Ç—Ü–µ–Ω—Ç—Ä¬ª\n\n"

"üîπ –ö–∞–∫ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è:\n\n"

"‚Äî –ú–æ—è –º–∞–º–∞ 42 –≥–æ–¥–∞ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª–∞ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–º –≤—Ä–∞—á–æ–º –≤ –∫—Ä—É–ø–Ω–æ–º —Ö–æ–∑—è–π—Å—Ç–≤–µ, ‚Äî —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –ò–≤–∞–Ω –ê–±—Ä–∞–º–æ–≤. ‚Äî –ï—Å–ª–∏ —Å–ª—É—á–∞–ª—Å—è –æ—Ç—ë–ª –∏–ª–∏ –ø–∞–¥—ë–∂ —Å–∫–æ—Ç–∞ ‚Äì –ª—é–¥–∏ –±–µ–∂–∞–ª–∏ –∫ –Ω–µ–π –Ω–∞ –ø–æ–º–æ—â—å. –° –º–∞–ª—ã—Ö –ª–µ—Ç –º–∞–º–∞ –±—Ä–∞–ª–∞ –º–µ–Ω—è —Å —Å–æ–±–æ–π. –Ø –∏ –≤–∏–¥–µ–ª, —Å –∫–∞–∫–æ–π –∑–∞–±–æ—Ç–æ–π –∏ –ª—é–±–æ–≤—å—é –æ–Ω–∞ –ø–æ–º–æ–≥–∞–µ—Ç –∂–∏–≤–æ—Ç–Ω—ã–º. –ü–æ—Ç–æ–º —Å—Ç–∞–ª –ø–æ–º–æ–≥–∞—Ç—å –µ–π ‚Äì –Ω–∞—É—á–∏–ª—Å—è –¥–µ–ª–∞—Ç—å —É–∫–æ–ª—ã –∏ –∏–Ω—ä–µ–∫—Ü–∏–∏.\n"
"–° –¥–µ—Ç—Å—Ç–≤–∞ –º–µ—á—Ç–∞–ª, –∫–∞–∫ –º–∞–º–∞, –±—ã—Ç—å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–º. –ü–æ—ç—Ç–æ–º—É —Å–≤–æ—é –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –≤—ã–±—Ä–∞–ª –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ, –ø–æ—Å—Ç—É–ø–∏–ª –≤ –ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–∏–∫—É–º.\n\n")

    text = ( "üîπ –¢—Ä—É–¥–æ–≤–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å:\n\n"

"–ò–≤–∞–Ω –ê–±—Ä–∞–º–æ–≤ –Ω–∞—á–∏–Ω–∞–ª –∫–∞–∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Ñ–µ–ª—å–¥—à–µ—Ä –≤ —Å–µ–ª–µ –ß–µ—Ä–¥—ã–Ω—Ü–µ–≤–æ –ö—É—Ä–≥–∞–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –ß–µ—Ä–µ–∑ –≥–æ–¥ –º–æ–ª–æ–¥–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –ø–µ—Ä–µ–≤–µ–ª–∏ –Ω–∞ –≤–µ—Ç—Å—Ç–∞–Ω—Ü–∏—é –≤ –≥. –ö—É—Ä–≥–∞–Ω–µ, –≥–¥–µ –æ–Ω —Å—Ç–∞–ª –≤–µ–¥—É—â–∏–º –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–º –≤—Ä–∞—á–æ–º. –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–ª—É—á–∞–ª –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –£—Ä–∞–ª—å—Å–∫–æ–º –∞–≥—Ä–∞—Ä–Ω–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.\n\n"

"–°–ª–µ–¥—É—é—â–µ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã ‚Äî –≤–µ—Ç–≤—Ä–∞—á –¢—é–º–µ–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏, —Å–µ–ª–æ –ë–µ—Ä–¥—é–∂—å–µ. –ü–µ—Ä–µ–µ–∑–¥ –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–º–≤–æ–ª–∏—á–Ω—ã–º ‚Äî —ç—Ç–æ —Ä–æ–¥–∏–Ω–∞ —Å—É–ø—Ä—É–≥–∏ –ò–≤–∞–Ω–∞ –ê–±—Ä–∞–º–æ–≤–∞, –∏ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç —É—á—Ä–µ–∂–¥–µ–Ω–∏—é —Å—Ä–æ—á–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–ª—Å—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á.\n\n"
"üîπ –†–∞–±–æ—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º –ì–ê–£ –¢–û \¬´–¢–æ–±–æ–ª—å—Å–∫–∏–π –º–µ–∂—Ä–∞–π–æ–Ω–Ω—ã–π —Ü–µ–Ω—Ç—Ä –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏–∏\¬ª:\n\n"
                     
"–í—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∏ –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π –æ–ø—ã—Ç –±—ã–ª–∏ –∑–∞–º–µ—á–µ–Ω—ã ‚Äî –ò–≤–∞–Ω–∞ –ê–±—Ä–∞–º–æ–≤–∞ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º —É—á—Ä–µ–∂–¥–µ–Ω–∏—è. –û–Ω –¥–µ–ª–∏—Ç—Å—è:\n\n"

"‚Äî –í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏—è –Ω–µ —Å—Ç–æ–∏—Ç –Ω–∞ –º–µ—Å—Ç–µ. –ü–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã, –º–µ—Ç–æ–¥—ã –ª–µ—á–µ–Ω–∏—è. –ü–æ—ç—Ç–æ–º—É –º—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è —É—Å–ø–µ–≤–∞—Ç—å –∑–∞ –Ω–æ–≤—à–µ—Å—Ç–≤–∞–º–∏ ‚Äî –∏–∑—É—á–∞–µ–º –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É, –ø–æ–≤—ã—à–∞–µ–º –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é, —É—á–∞—Å—Ç–≤—É–µ–º –≤ —Å–µ–º–∏–Ω–∞—Ä–∞—Ö.\n"
"–ü–æ–º–∏–º–æ —ç—Ç–æ–≥–æ, –¥–µ–ª–∏–º—Å—è –æ–ø—ã—Ç–æ–º –∏ –∑–Ω–∞–Ω–∏—è–º–∏ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏. –†–∞–±–æ—Ç–∞–µ–º —Å –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π –∏ –ª—é–±–æ–≤—å—é –∫ –¥–µ–ª—É, –≤–∫–ª–∞–¥—ã–≤–∞–µ–º –¥—É—à—É.\n\n"

"–°–µ–≥–æ–¥–Ω—è –ò–≤–∞–Ω –ê–±—Ä–∞–º–æ–≤ –≤–æ–∑–≥–ª–∞–≤–ª—è–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ.\n\n"

"üîπ –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ ‚Äî –≥–ª–∞–≤–Ω–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å:\n\n"

"–°–æ–∑–¥–∞–Ω–∏–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–µ ‚Äî –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–∞—è —á–∞—Å—Ç—å —É—Å–ø–µ—Ö–∞. –ò–º–µ–Ω–Ω–æ –æ–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ —Å–ø–ª–æ—á—ë–Ω–Ω–æ—Å—Ç—å:\n\n"

"¬´–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –¥–ª—è –º–µ–Ω—è ‚Äî –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ. –Ø —É–≤–∞–∂–∞—é –∫–∞–∂–¥–æ–≥–æ, —Å—Ç–∞—Ä–∞—é—Å—å –ø—Ä–æ—è–≤–ª—è—Ç—å –∑–∞–±–æ—Ç—É –∏ –≤–Ω–∏–º–∞–Ω–∏–µ. –ú—ã ‚Äî –æ–¥–Ω–∞ –±–æ–ª—å—à–∞—è —Å–µ–º—å—è!¬ª")
    markup_restart = types.InlineKeyboardMarkup()
    restart_button = types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏", callback_data="send_main_menu")
    markup_restart.add(restart_button)

    bot.send_message(call.message.chat.id, text, reply_markup=markup_restart)
      
  elif call.data == "button4":
    bot.send_message(call.message.chat.id, "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –º–æ–∂–Ω–æ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö:\n\n"
                     
    "–î–ª—è –≤–µ—Ç—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –∏–º–µ—é—â–∏—Ö –≤—ã—Å—à–µ–µ –∏–ª–∏ —Å—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, ‚Äì –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–ª–∏ –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤.\n\n"
    "–î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ‚Äì –±—É–¥—É—â–∏—Ö –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—É—á–∞—é—Ç –≤—ã—Å—à–µ–µ –∏–ª–∏ —Å—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, ‚Äì –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ (–∏–ª–∏) –≤–∫–ª—é—á–µ–Ω–∏—è –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤.\n\n"
    "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º —É–∑–Ω–∞—Ç—å –æ –≤–∞—Å –±–æ–ª—å—à–µ –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤ –∏–ª–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏.")

    markup2 = types.InlineKeyboardMarkup()
    buttonemp1 = types.InlineKeyboardButton("–¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data="buttonemp1")
    buttonemp2 = types.InlineKeyboardButton("–í–∫–ª—é—á–µ–Ω–∏–µ –≤ –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤", callback_data="buttonemp2")
    buttonemp3 = types.InlineKeyboardButton("–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏", callback_data="buttonemp3")
    buttonemp4 = types.InlineKeyboardButton("–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤", callback_data="buttonemp4")
    markup2.add(buttonemp1)
    markup2.add(buttonemp2)
    markup2.add(buttonemp3)
    markup2.add(buttonemp4)

    bot.send_message(call.message.chat.id, "–ö–∞–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç?", reply_markup=markup2)

    
    
  # Agreement button
  elif call.data in ["buttonemp1", "buttonemp2", "buttonemp3", "buttonemp4"]:
    markup_agreement = types.InlineKeyboardMarkup()
    markup_agreement.add(types.InlineKeyboardButton("–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ ‚úÖ", callback_data="button_click"))
  
    bot.send_message(call.message.chat.id,
                     "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å!\n\n"
                     "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è, –Ω–∞–º –Ω—É–∂–Ω–æ —Å–ø—Ä–æ—Å–∏—Ç—å —É –≤–∞—Å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\n"
                     "[–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É](https://docs.google.com/document/d/1V8MUnGQf-M2TcC7ujAyGCe8Qwl1bzD7ce7lhn4YzrxQ/edit?usp=sharing)",
                     parse_mode="Markdown", reply_markup=markup_agreement)

  elif call.data == "button_click":
    markup_status = types.InlineKeyboardMarkup()
    buttonstatus1 = types.InlineKeyboardButton("–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", callback_data="buttonstatus1")
    buttonstatus2 = types.InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—Ç ‚Äì –±—É–¥—É—â–∏–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç", callback_data="buttonstatus2")
    markup_status.add(buttonstatus1)
    markup_status.add(buttonstatus2)
    bot.send_message(call.message.chat.id, "–í—ã (–Ω–∞ –≤—ã–±–æ—Ä):", reply_markup=markup_status)
  
  elif call.data == "buttonstatus1":
    markup_wet = types.InlineKeyboardMarkup()
    buttonwet1 = types.InlineKeyboardButton("–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á", callback_data="buttonwet1")
    buttonwet2 = types.InlineKeyboardButton("–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Ñ–µ–ª—å–¥—à–µ—Ä", callback_data="buttonwet2")
    markup_wet.add(buttonwet1)
    markup_wet.add(buttonwet2)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –¥–æ–ª–∂–Ω–æ—Å—Ç—å:", reply_markup=markup_wet)
  elif call.data == "buttonstatus2":
    markup_student = types.InlineKeyboardMarkup()
    buttonstudent1 = types.InlineKeyboardButton("–ë—É–¥—É—â–∏–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á", callback_data="buttonstudent1")
    buttonstudent2 = types.InlineKeyboardButton("–ë—É–¥—É—â–∏–π –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π —Ñ–µ–ª—å–¥—à–µ—Ä", callback_data="buttonstudent2")
    markup_student.add(buttonstudent1)
    markup_student.add(buttonstudent2)
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:", reply_markup=markup_student)

  
    # CV or questionnaire
  elif call.data in ["buttonwet1", "buttonwet2", "buttonstudent1", "buttonstudent2"]:
    markup_questionnaire = types.InlineKeyboardMarkup()
    buttonquestionnaire = types.InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", callback_data="buttonquestionnaire")
    markup_questionnaire.add(buttonquestionnaire)

    bot.send_message(call.message.chat.id, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤", reply_markup=markup_questionnaire)

  elif call.data == "buttonquestionnaire":
    user_id = call.from_user.id
    chat_id = call.message.chat.id
    user_state[user_id] = "waiting_fio"
    user_data[user_id] = {}
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ):")

@bot.message_handler(func=lambda m: True)
def main_handler(message):
    user_id = message.from_user.id
    state = user_state.get(user_id)

    if state == "waiting_for_resume":
        pass

    elif state == "waiting_fio":
        fio = message.text.strip()
        if len(fio.split()) != 3:
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –§–ò–û, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û –µ—â–µ —Ä–∞–∑.")
            return
        user_data[user_id]["fio"] = fio
        user_state[user_id] = "waiting_edu"
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è:")


    elif state == "waiting_edu":
        user_data[user_id]["edu"] = message.text
        user_state[user_id] = "waiting_year"
        bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –≥–æ–¥ –æ–∫–æ–Ω—á–∞–Ω–∏—è (–ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –≥–æ–¥ –æ–∫–æ–Ω—á–∞–Ω–∏—è)")

    elif state == "waiting_year":
        try:
            year = int(message.text)
            if 1900 <= year <= 2100:
                user_data[user_id]["year"] = year
                user_state[user_id] = "waiting_age"
                bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
            else:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1900 –¥–æ 2100.")
        except ValueError:
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ —Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä 2025.")


    elif state == "waiting_age":
        try:
            age = int(message.text)
            if 16 <= age <= 99:
                user_data[user_id]["age"] = age
                user_state[user_id] = "waiting_exp" 
                bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç–∞–ª–∏, –∏ —Å—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏\n"
"–ü—Ä–∏–º–µ—Ä: –û–û–û ¬´________¬ª, 1 –≥–æ–¥")
            else:
                bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 16 –¥–æ 99 –ª–µ—Ç.")
        except ValueError:
            bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä 25.")

    elif state == "waiting_exp":
        user_data[user_id]["exp"] = message.text
        user_state[user_id] = "waiting_about"
        bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã –µ—â–µ —Ö–æ—Ç–µ–ª–∏ –±—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ?")

    elif state == "waiting_about":
        user_data[user_id]["about"] = message.text
        user_state[user_id] = "waiting_contact"
        data = user_data[user_id]
        contact_keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        contact_button = types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üìû", request_contact=True)
        contact_keyboard.add(contact_button)
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã! –¢–µ–ø–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –í–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=contact_keyboard)
    
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    user_id = message.from_user.id
    contact = message.contact.phone_number
    user_data[user_id]["contact"] = contact
    user_state[user_id] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!", reply_markup=types.ReplyKeyboardRemove())

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É, –±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏
    data = user_data.get(user_id)
    if data:
        applicant_data = {
            "telegram_id": user_id,
            "fio": data.get("fio"),
            "contact": data.get("contact"),
            "age": data.get("age"),
            "edu": data.get("edu"),
            "year": data.get("year"),
            "exp": data.get("exp"),
            "about": data.get("about")
        }
        try:
            save_applicant(applicant_data)
            print(f"–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {applicant_data}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        finally:
            user_data[user_id] = {}

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    final_text = (
        "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è "
        "–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å—Ñ–µ—Ä–µ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏–∏!\n\n"
        "[–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ—Ü—Å–µ—Ç–∏](https://vk.com/public200521064)"
    )
    markup_restart = types.InlineKeyboardMarkup()
    restart_button = types.InlineKeyboardButton("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞", callback_data="send_main_menu")
    markup_restart.add(restart_button)
    bot.send_message(message.chat.id, final_text, parse_mode='Markdown', reply_markup=markup_restart)


@bot.message_handler(commands=['showdb'])
def show_db(message):
    try:
        conn = sqlite3.connect("applicants.db")
        cur = conn.cursor()
        cur.execute("SELECT * FROM applicants")
        data = cur.fetchall()

        response = "–î–∞–Ω–Ω—ã–µ –≤ –ë–î:\n"
        for row in data:
            response += f"{row}\n"

        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if len(response) > 4000:
            for x in range(0, len(response), 4000):
                bot.send_message(message.chat.id, response[x:x+4000])
        else:
            bot.send_message(message.chat.id, response)

    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: {str(e)}")
    finally:
        if conn:
            conn.close()





if os.path.exists("last_chat.txt"):
    with open("last_chat.txt", "r") as f:
        saved_chat_id = f.read().strip()

    if saved_chat_id:
        try:
            class FakeMessage:
                def __init__(self, chat_id):
                    self.chat = type("Chat", (), {"id": chat_id})

            fake_message = FakeMessage(int(saved_chat_id))
            start_handler(fake_message)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ start –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:", e)
        os.remove("last_chat.txt")
if __name__ == '__main__':
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
            bot.polling(none_stop=True, interval=0)
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
            print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)
